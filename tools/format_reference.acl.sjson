// Raw clip filenames should have the form: *.acl.sjson
// Note: a clip raw file isn't a true valid javascript file. It uses simplified json syntax.

// Compressed clip filenames should have the form: *.acl.zip
// Note: a compressed clip is just a zipped raw clip.

// Each file contains the information of a single clip or track list (but not both).

// The ACL file format version
// version = 1		// Initial version
// version = 2		// Introduced clip compression settings
//version = 3		// Introduced additive clip related data
//version = 4		// Introduced track list related data
version = 5			// Renamed enums for 2.0 and other related changes

// BEGIN CLIP RELATED DATA

// Clip general information.
// Optional, if present clip settings, bones, and tracks must be present as well.
// Must come first, before settings, bones, and tracks
clip =
{
	// Clip properties can come in any order

	// Clip name, handy for debugging. Optional, filename will be used if missing.
	name = "A clip"

	// Number of samples per track. All tracks must have the same number of samples.
	// Clip duration in seconds = (num_samples - 1) / sample_rate
	// Regardless of sample_rate, if we have a single sample, we have a 0.0 duration
	// and thus represent a static pose.
	num_samples = 73

	// Clip sample rate in samples per second. All tracks must have the same sample rate.
	sample_rate = 30

	// Whether floating point values are stored in hexadecimal and thus binary exact. Optional, defaults to 'false'.
	// Introduced in version 2.
	is_binary_exact = true

	// Additive format of base clip, if present. Optional, defaults to 'none'.
	// Introduced in version 3.
	additive_format = "none"

	// The additive base clip name. Optional, defaults to empty string.
	// Introduced in version 3.
	additive_base_name = "A base clip"

	// The additive base clip num samples. Optional, defaults to 0.
	// Introduced in version 3.
	additive_base_num_samples = 1

	// The additive base clip sample rate. Optional, defaults to 1.
	// Introduced in version 3.
	additive_base_sample_rate = 30
}

// Optional clip compression settings.
// Must come before bones
settings =
{
	// The name of the algorithm to use. See function get_algorithm_type(..)
	// Defaults to 'uniformly_sampled'
	algorithm_name = "uniformly_sampled"

	// The rotation, translation, and scale formats to use. See functions get_rotation_format(..) and get_vector_format(..)
	// Defaults to raw: 'quatf_full' and 'vector3f_full'
	rotation_format = "quatf_full"
	translation_format = "vector3f_full"
	scale_format = "vector3f_full"

	// Settings used when segmenting clips
	// Optional
	segmenting = {
		// How many samples to try and fit in our segments
		// Defaults to '16'
		ideal_num_samples = 16

		// Maximum number of samples per segment
		// Defaults to '31'
		max_num_samples = 31
	}

	// Threshold angle value to use when detecting if a rotation track is constant
	// Defaults to '0.00284714461' radians
	constant_rotation_threshold_angle = 0.00284714461

	// Threshold value to use when detecting if a translation track is constant
	// Defaults to '0.001' centimeters
	constant_translation_threshold = 0.001

	// Threshold value to use when detecting if a scale track is constant
	// Defaults to '0.00001'
	constant_scale_threshold = 0.00001

	// The error threshold used when optimizing the bit rate
	// Defaults to '0.01' centimeters
	error_threshold = 0.01
}

// Reference clip skeleton, list of bones (any order)
// Must come before tracks
bones =
[
	{
		// Bone properties can come in any order

		// Bone name
		name = "root"

		// Parent bone. An empty string denotes the root bone, there can be multiple root bones
		// There must be a root bone
		// Parent bones must be listed before their children
		parent = ""

		// Virtual vertex distance used by hierarchical error function
		vertex_distance = 1.0

		// Bind pose transform information. All three are optional
		// The bind pose should be in parent bone local space
		bind_rotation = [ 0.0, 0.0, 0.0, 1.0 ]
		bind_translation = [ 0.0, 0.0, 0.0 ]
		bind_scale = [ 1.0, 1.0, 1.0 ]
	}
	{
		name = "bone1"
		parent = "root"
		vertex_distance = 1.0
	}
]

// Animation data, list of clip tracks (any order)
tracks =
[
	{
		// Track properties can come in any order

		// Bone name
		name = "root"

		// Rotation track, optional
		// The rotations should be in parent bone local space
		rotations =
		[
			[ 0.0, 0.0, 0.0, 1.0 ]
			[ 1.0, 0.0, 0.0, 0.0 ]
			// The number of samples here must match num_samples
		]

		// Translation track, optional
		// The translations should be in parent bone local space
		translations =
		[
			[ 0.0, 0.0, 0.0 ]
			[ 1.0, 0.0, 0.0 ]
			// The number of samples here must match num_samples
		]

		// Scale track, optional
		// The scales should be in parent bone local space
		scales =
		[
			[ 1.0, 1.0, 1.0 ]
			[ 1.0, 1.0, 1.0 ]
			// The number of samples here must match num_samples
		]
	}
]

// END CLIP RELATED DATA
// BEGIN TRACK LIST RELATED DATA

// List general information.
// Optional, if present clip settings and tracks must be present as well.
// Must come first, before settings and tracks
track_list =
{
	// Track list properties can come in any order

	// List name, handy for debugging. Optional, filename will be used if missing.
	name = "A clip"

	// Number of samples per track. All tracks must have the same number of samples.
	// List duration in seconds = (num_samples - 1) / sample_rate
	// Regardless of sample_rate, if we have a single sample, we have a 0.0 duration
	// and thus represent a static snapshot.
	num_samples = 73

	// List sample rate in samples per second. All tracks must have the same sample rate.
	sample_rate = 30

	// Whether floating point values are stored in hexadecimal and thus binary exact. Optional, defaults to 'false'.
	is_binary_exact = true
}

// Optional list compression settings.
// Must come before tracks
settings =
{
}

// List of raw tracks
tracks =
[
	{
		// Track properties can come in any order

		// Track name, optional
		name = "Right Hand IK"

		// Track type (float1f, float2f, float3f, float4f)
		type = float4f

		// The precision target used when optimizing the bit rate
		// Defaults to '0.0001' units
		precision = 0.0001

		// The constant track detection threshold
		// Defaults to '0.00001' units
		// DEPRECATED, NO LONGER USED OR NECESSARY
		constant_threshold = 0.00001

		// The track output index. When writing out the compressed data stream, this index
		// will be used instead of the track index. This allows custom reordering for things
		// like LOD sorting or skeleton remapping. A value of 'k_invalid_track_index' (0xFFFFFFFF) will strip the track
		// from the compressed data stream. Output indices must be unique and contiguous.
		// Defaults to the track index
		output_index = 12

		// The track index of our parent track
		// Transforms only
		parent_index = 2

		// The shell distance of the transform's error metric
		// Transforms only
		shell_distance = 3.0

		// The constant rotation detection threshold
		// Transforms only
		constant_rotation_threshold_angle = 0.1

		// The constant translation detection threshold
		// Transforms only
		constant_translation_threshold = 0.1

		// The constant scale detection threshold
		// Transforms only
		constant_scale_threshold = 0.1

		// Bind pose transform information. All three are optional
		// The bind pose should be in parent bone local space
		bind_rotation = [ 0.0, 0.0, 0.0, 1.0 ]
		bind_translation = [ 0.0, 0.0, 0.0 ]
		bind_scale = [ 1.0, 1.0, 1.0 ]

		// Track data
		// The number of samples here must match num_samples
		data =
		[
			// Scalar tracks are of the form: [ x, y, z, .. ] with one entry per scalar component
			[ 0.0, 0.0, 0.0, 1.0 ]
			[ 1.0, 0.0, 0.0, 0.0 ]

			// Transform tracks are of the form: [ [ rot.x, rot.y, rot.z, rot.z ], [ trans.x, trans.y, trans.z ], [ scale.x, scale.y, scale.z ] ]
			// All three parts must be present and cannot be omitted
		]
	}
]

// END TRACK LIST RELATED DATA
