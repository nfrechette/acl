dist: xenial
sudo: required

language: cpp

matrix:
  include:
    # Linux gcc5
    - os: linux
      env: COMPILER=gcc5 TOOLCHAIN=gcc PACKAGES="g++-5 g++-5-multilib g++-multilib"

    # Linux gcc6
    - os: linux
      env: COMPILER=gcc6 TOOLCHAIN=gcc PACKAGES="g++-6 g++-6-multilib g++-multilib"

    # Linux gcc7
    - os: linux
      env: COMPILER=gcc7 TOOLCHAIN=gcc PACKAGES="g++-7 g++-7-multilib g++-multilib"

    # Linux gcc8
    - os: linux
      env: COMPILER=gcc8 TOOLCHAIN=gcc PACKAGES="g++-8 g++-8-multilib g++-multilib"

    # Linux gcc9
    - os: linux
      env: COMPILER=gcc9 TOOLCHAIN=gcc PACKAGES="g++-9 g++-9-multilib g++-multilib"

    # Linux clang4
    - os: linux
      env: COMPILER=clang4 TOOLCHAIN=clang PACKAGES="clang-4.0 libstdc++-5-dev libc6-dev-i386 g++-5-multilib g++-multilib"

    # Linux clang5
    - os: linux
      env: COMPILER=clang5 TOOLCHAIN=clang SONARCLOUD=1 PACKAGES="clang-5.0 libstdc++-5-dev libc6-dev-i386 g++-5-multilib g++-multilib"
      addons:
        sonarcloud:
          organization: "nfrechette-github"

    # Linux clang6
    - os: linux
      env: COMPILER=clang6 TOOLCHAIN=clang PACKAGES="clang-6.0 libstdc++-5-dev libc6-dev-i386 g++-5-multilib g++-multilib"

    # Linux clang7
    - os: linux
      env: COMPILER=clang7 TOOLCHAIN=clang PACKAGES="clang-7 libstdc++-5-dev libc6-dev-i386 g++-5-multilib g++-multilib"

    # OS X xcode8
    - os: osx
      osx_image: xcode8.3
      env: COMPILER=osx TOOLCHAIN=xcode

    # OS X xcode9
    - os: osx
      osx_image: xcode9.4
      env: COMPILER=osx TOOLCHAIN=xcode

    # OS X xcode10
    - os: osx
      osx_image: xcode10.3
      env: COMPILER=osx TOOLCHAIN=xcode

    # OS X xcode11
    - os: osx
      osx_image: xcode11.2
      env: COMPILER=osx TOOLCHAIN=xcode NOX86=1

before_install:
    - if [[ "$TOOLCHAIN" == "clang" ]]; then curl -sSL "http://apt.llvm.org/llvm-snapshot.gpg.key" | sudo -E apt-key add - ; fi
    - if [[ "$COMPILER" == "clang4" ]]; then echo "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-4.0 main" | sudo tee -a /etc/apt/sources.list > /dev/null ; fi
    - if [[ "$COMPILER" == "clang5" ]]; then echo "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-5.0 main" | sudo tee -a /etc/apt/sources.list > /dev/null ; fi
    - if [[ "$COMPILER" == "clang6" ]]; then echo "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-6.0 main" | sudo tee -a /etc/apt/sources.list > /dev/null ; fi
    - if [[ "$COMPILER" == "clang7" ]]; then echo "deb http://apt.llvm.org/xenial/ llvm-toolchain-xenial-7 main" | sudo tee -a /etc/apt/sources.list > /dev/null ; fi
    - 'if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo -E apt-add-repository -y "ppa:ubuntu-toolchain-r/test";
      sudo -E apt-get -yq update;
      sudo -E apt-get -yq --no-install-suggests --no-install-recommends --force-yes install ${PACKAGES};
      fi'

script:
    - 'if [[ "$NOX86" != "1" ]]; then
      python make.py -clean -build -unit_test -compiler ${COMPILER} -config Debug -cpu x86;
      python make.py -clean -build -unit_test -compiler ${COMPILER} -config Release -cpu x86;
      fi'
    - python make.py -clean -build -unit_test -compiler ${COMPILER} -config Debug -cpu x64
    - python make.py -clean -build -unit_test -compiler ${COMPILER} -config Release -cpu x64
    # Hack to avoid trying nosimd with clang7, it never terminates or takes forever
    - 'if [[ "$COMPILER" != "clang7" ]]; then
      python make.py -clean -build -unit_test -compiler ${COMPILER} -config Release -cpu x64 -nosimd;
      fi'
    - 'if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      python make.py -clean -build -compiler ios -config Debug;
      python make.py -clean -build -compiler ios -config Release;
      python make.py -clean -build -compiler ios -config Release -nosimd;
      fi'
    # Only run sonarcloud on non-PRs
    - 'if [[ "$SONARCLOUD" == "1" && "$TRAVIS_PULL_REQUEST" == "false" ]]; then
      python make.py -clean -compiler ${COMPILER} -config Release -cpu x64;
      build-wrapper-linux-x86-64 --out-dir bw_output python make.py -build -compiler ${COMPILER} -config Release -cpu x64;
      sonar-scanner;
      fi'
